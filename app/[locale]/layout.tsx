import type { Metadata } from "next";
import localFont from "next/font/local";
import "./globals.css";
import Header from "@/components/shared/header";
import Footer from "@/components/shared/footer";
import { ThemeProvider } from "next-themes";
import MobileBottomNav from "@/components/shared/footer/mobile-bottom-nav";
import { NextIntlClientProvider, hasLocale } from "next-intl";
import { notFound } from "next/navigation";
import { routing } from "@/i18n/routing";
import { Toaster } from "@/components/ui/sonner";
import { AuthProvider } from "@/lib/auth-context";
import { getMessages } from "next-intl/server";

const poppins = localFont({
  src: "../../public/fonts/Poppins-Medium.ttf",
  display: "swap",
  variable: "--font-poppins",
  preload: true,
  fallback: ["system-ui", "sans-serif"],
});

const yekanBakh = localFont({
  src: "../../public/fonts/YekanBakhFaNum-Regular.woff",
  display: "swap",
  variable: "--font-yekan",
  preload: true,
  fallback: ["system-ui", "sans-serif"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
  params,
}: Readonly<{
  children: React.ReactNode;
  params: { locale: string };
}>) {
  // Ensure that the incoming `locale` is valid
  const { locale } = params;
  if (!hasLocale(routing.locales, locale)) {
    notFound();
  }
  const isRTL = locale === "fa";
  const dir = isRTL ? "rtl" : "ltr";
  const font = isRTL ? yekanBakh : poppins;

  // Get messages for the current locale
  let messages;
  try {
    messages = await getMessages();
  } catch (error) {
    console.error("Error loading messages:", error);
    messages = {};
  }

  return (
    <html lang={locale} dir={dir} suppressHydrationWarning>
      <body className={`${font.className} ${isRTL ? "rtl" : ""}`}>
        <NextIntlClientProvider messages={messages}>
          <ThemeProvider attribute="class" defaultTheme="system" enableSystem>
            <AuthProvider>
              <Header />
              {children}
              <Footer />
              <MobileBottomNav />
              <Toaster />
            </AuthProvider>
          </ThemeProvider>
        </NextIntlClientProvider>
      </body>
    </html>
  );
}
